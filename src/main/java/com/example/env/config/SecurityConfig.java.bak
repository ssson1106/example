package com.example.env.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Configuration;
import org.springframework.http.HttpMethod;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.builders.WebSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.crypto.password.PasswordEncoder;

@Configuration
@EnableWebSecurity
public class SecurityConfig extends WebSecurityConfigurerAdapter {

	/*
	 * @Autowired PasswordEncoder passwordEncoder;
	 * 
	 * 
	 * @Override protected void configure(AuthenticationManagerBuilder auth) throws
	 * Exception {
	 * 
	 * auth .inMemoryAuthentication() .withUser("user")
	 * .password(passwordEncoder.encode("password")) .roles("USER") .and()
	 * .withUser("admin") .password(passwordEncoder.encode("admin")) .roles("USER",
	 * "ADMIN");
	 * 
	 * }
	 * 
	 * @Override protected void configure(HttpSecurity http) throws Exception {
	 * 
	 * http .cors() .and() .csrf().disable() .authorizeRequests()
	 * .antMatchers("/user/**").hasAnyRole("USER")
	 * .antMatchers("/admin/**").hasAnyRole("ADMIN")
	 * .antMatchers("/index*").permitAll() .anyRequest() .authenticated() .and()
	 * .formLogin().loginPage("/index.html") .loginProcessingUrl("/perform_login")
	 * .defaultSuccessUrl("/homepage.html",true)
	 * .failureUrl("/index.html?error=true") ;
	 * 
	 * }
	 * 
	 * @Override public void configure(WebSecurity web) throws Exception {
	 * 
	 * 
	 * web.ignoring().antMatchers(HttpMethod.GET, "/index*", "/static/**", "/*.js",
	 * "/*.json", "/*.ico");
	 * 
	 * 
	 * }
	 */

}
